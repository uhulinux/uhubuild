#!/bin/bash -eu

if [ -f CMakeLists.txt ]; then
	argv=()
	argx=(
		-DCMAKE_INSTALL_PREFIX="/usr" \
	)
	if ! grep 'DCMAKE_INSTALL_LIBDIR' "$UB_SRCDIR/compile"; then
		argx[${#argx[@]}]="-DCMAKE_INSTALL_LIBDIR="/usr/lib""
	fi
	for i in "${argx[@]}"; do
		argv[${#argv[@]}]="$i"
	done
	# be verbose :)
	echo "cmake"
	for i in "$@" "${argv[@]}"; do
		echo -e "\t$i"
	done

	mkdir -p build
	cd build
	cmake \
		"$@" "${argv[@]}" \
		..
elif [ -f "configure" -a ! -f meson.build ]; then
	ub_configure "$@"
else
	if [ -f "autogen.sh" -a ! -f meson.build ]; then
		UB_CONFIGURE_SCRIPT="./autogen.sh" ub_configure "$@"
	fi
fi

if [ -f setup.py -a ! -f Makefile ]; then
	exec python"${UB_PYTHON}" ./setup.py build "$@"
fi

if [ -f Makefile.PL ]; then
	perl Makefile.PL "$@"
fi

if [ -f Build.PL ]; then
	perl Build.PL "$@"
	exec ./Build
fi

if [ -f extconf.rb ]; then
	ruby extconf.rb "$@"
fi

if [ -f /usr/bin/scons -a -f SConstruct -a ! -f Makefile ]; then
	exec scons \
		PREFIX=/usr \
		LIBDIR=/usr/lib \
		"$@"
fi

if [ -f meson.build ]; then
	meson build \
		--prefix="/usr"             \
		--sysconfdir="/etc"         \
		--localstatedir="/var"      \
		--mandir="/usr/share/man"   \
		--infodir="/usr/share/info" \
		--backend=ninja		        \
		--buildtype=release         \
		--default-library=shared	\
		"$@"
fi

exec ub_make
